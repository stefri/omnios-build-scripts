<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="redis">
  <service name="application/database/redis" 
           type="service" 
           version="1">

    <create_default_instance enabled="false" />
    <single_instance />

    <!-- Wait for network interfaces to be initialized -->
    <dependency name="network" 
                grouping="require_all" 
                restart_on="error" 
                type="service">
        <service_fmri value="svc:/milestone/network:default" />
    </dependency>

    <!-- Wait for local filesystems to be mounted -->
    <dependency name="filesystem" 
                grouping="require_all" 
                restart_on="error" 
                type="service">
        <service_fmri value="svc:/system/filesystem/local" />
    </dependency>

    <method_context working_directory="/var/redis/db">
        <method_credential user="redis" group="redis" />
    </method_context>

    <exec_method type="method" 
                 name="start" 
                 exec="/usr/local/bin/redis-server %{config_file}" 
                 timeout_seconds="60" />

    <exec_method type="method" 
                 name="stop"
                 exec=":kill" 
                 timeout_seconds="60" />

    <property_group name="startd" type="framework">
        <propval name="duration" type="astring" value="contract" />
        <propval name="ignore_error" type="astring" value="core,signal" />
    </property_group>

    <property_group name="application" type="application">
        <propval name="config_file" type="astring" value="/etc/redis/redis.conf" />
    </property_group>

    <stability value="Evolving" />

    <template>
        <common_name>
            <loctext xml:lang="C">Redis server</loctext>
        </common_name>
    </template>

  </service>
</service_bundle>
