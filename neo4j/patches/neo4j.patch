diff -rupN neo4j-community-2.1.5.orig/bin/neo4j neo4j-community-2.1.5/bin/neo4j
--- neo4j-community-2.1.5.orig/bin/neo4j	2014-09-30 08:35:40.000000000 +0200
+++ neo4j-community-2.1.5/bin/neo4j	2014-11-19 16:28:11.079864966 +0100
@@ -31,6 +31,7 @@
 
 FRIENDLY_NAME="Neo4j Server"
 LAUNCHD_NAME="org.neo4j.server"
+EGREP=gegrep
 
 function findBaseDirAndCdThere {
 # This seems to not be safe to run at any time. If that
@@ -47,7 +48,9 @@ function findBaseDirAndCdThere {
     SCRIPT=`basename "$SCRIPT"`
   done
   NEO4J_HOME=`cd $( dirname "$SCRIPT" )/.. && dirs -l +0`
-  NEO4J_INSTANCE=$NEO4J_HOME
+  if [ -z "$NEO4J_INSTANCE" ]; then
+    NEO4J_INSTANCE="$NEO4J_HOME"
+  fi
   NEO4J_CONFIG=$NEO4J_INSTANCE/conf
   NEO4J_LOG=$NEO4J_INSTANCE/data/log
 
@@ -74,7 +77,7 @@ JAVA_OPTS="-server -XX:+DisableExplicitG
 [ -z "${wrapper_java_initmemory}" ] || JAVA_OPTS="$JAVA_OPTS -Xms${wrapper_java_initmemory}m"
 [ -z "${wrapper_java_maxmemory}" ] || JAVA_OPTS="$JAVA_OPTS -Xmx${wrapper_java_maxmemory}m"
 
-#NEO4J_SERVER_PORT=`( egrep "^org.neo4j.server.webserver.port" $NEO4J_INSTANCE/conf/neo4j-server.properties || echo 7474 ) | sed -e 's/.*=//'`
+#NEO4J_SERVER_PORT=`( $EGREP "^org.neo4j.server.webserver.port" $NEO4J_INSTANCE/conf/neo4j-server.properties || echo 7474 ) | sed -e 's/.*=//'`
 NEO4J_SERVER_PORT=${org_neo4j_server_webserver_port:=7474}
 
 LAUNCHD_NAME="${LAUNCHD_NAME}.${NEO4J_SERVER_PORT}"
@@ -138,15 +141,24 @@ buildclasspath() {
 }
 
 detectrunning() {
-  if [ $DIST_OS = "solaris" ] ; then
-      ## SmartOS has a different lsof command line arguments
-      newpid=$(lsof -o $NEO4J_SERVER_PORT | grep '::' | head -n1 | cut -d ' ' -f 1)
-  else
-      ## This could be achieved with filtering using -sTCP:LISTEN but this option is not available
-      ## on lsof v4.78 which is the one bundled with some distros. So we have to do this grep below
-      newpid=$(lsof -i :$NEO4J_SERVER_PORT -F T -Ts | grep -i "TST=LISTEN" -B1 | head -n1)
-      newpid=${newpid:1}
-  fi
+  case $DIST_OS in
+  'omnios')
+    if [ -e "$PID_FILE" ]; then
+      ## OmniOS does not include the hacky lsof, we should use netstat instead
+      newpid=$(netstat -an | grep "\.$NEO4J_SERVER_PORT" | cat "$PID_FILE" )
+    fi
+    ;;
+  'solaris')
+    ## SmartOS has a different lsof command line arguments
+    newpid=$(lsof -o $NEO4J_SERVER_PORT | grep '::' | head -n1 | cut -d ' ' -f 1)
+    ;;
+  *)
+    ## This could be achieved with filtering using -sTCP:LISTEN but this option is not available
+    ## on lsof v4.78 which is the one bundled with some distros. So we have to do this grep below
+    newpid=$(lsof -i :$NEO4J_SERVER_PORT -F T -Ts | grep -i "TST=LISTEN" -B1 | head -n1)
+    newpid=${newpid:1}
+    ;;
+  esac
 }
 
 startit() {
@@ -195,7 +207,7 @@ startit() {
         org.neo4j.server.Bootstrapper >> \"${CONSOLE_LOG}\" 2>&1 & echo \$! > \"$PID_FILE\" "
     else
       checkwriteaccess
-      echo "WARNING: not changing user"
+      #echo "WARNING: not changing user"
       "$JAVACMD" -cp "${CLASSPATH}" $JAVA_OPTS  \
         -Dneo4j.home="${NEO4J_HOME}" -Dneo4j.instance="${NEO4J_INSTANCE}" \
         -Dfile.encoding=UTF-8 \
@@ -393,4 +405,4 @@ case "${!OPTIND}" in
 
 esac
 
-exit $?
\ No newline at end of file
+exit $?
diff -rupN neo4j-community-2.1.5.orig/bin/utils neo4j-community-2.1.5/bin/utils
--- neo4j-community-2.1.5.orig/bin/utils	2014-09-30 08:35:40.000000000 +0200
+++ neo4j-community-2.1.5/bin/utils	2014-11-19 16:27:38.397517550 +0100
@@ -129,7 +129,7 @@ checkstatus() {
 checkwriteaccess() {
     if [ $UID != 0 ] ; then
     if [ ! -w "$NEO4J_INSTANCE/data" ] ; then
-      echo "ERROR: No write access to data/ directory, run either as user $NEO4J_USER or root"
+      echo "ERROR: No write access to $NEO4J_INSTANCE/data/ directory, run either as user $NEO4J_USER or root"
       exit 1
     fi
     fi
@@ -175,13 +175,17 @@ detectos() {
   DIST_OS=`uname -s | tr 'A-Z' 'a-z' | tr -d ' '`
   case "$DIST_OS" in
     'sunos')
-      DIST_OS="solaris"
+      if grep -q 'OmniOS' /etc/release; then
+        DIST_OS="omnios"
+      else
+        DIST_OS="solaris"
+      fi
       ;;
     'hp-ux' | 'hp-ux64')
       # HP-UX needs the XPG4 version of ps (for -o args)
       DIST_OS="hpux"
       UNIX95=""
-      export UNIX95   
+      export UNIX95
       ;;
     'darwin')
       DIST_OS="macosx"
@@ -266,12 +270,12 @@ remove_user() {
     else
       DELETE_CMD='/usr/sbin/userdel'
     fi
-    
+
     case $yn in
       [Yy]* ) $DELETE_CMD $wrapper_user
               modify_user_config "" "true"
         ;;
-      * ) echo "OK, we'll let that user live, for now." 
+      * ) echo "OK, we'll let that user live, for now."
         ;;
     esac
   else
@@ -324,11 +328,11 @@ removeservice() {
 # in place.
 checkandrepairenv() {
     # Create data/log if missing, change owner if created.
-    if [ ! -d "$NEO4J_HOME"/data/log ]; then
-      echo "${NEO4J_HOME}/data/log was missing, recreating..."
-      mkdir "$NEO4J_HOME"/data/log
+    if [ ! -d "$NEO4J_LOG" ]; then
+      echo "${NEO4J_LOG} was missing, recreating..."
+      mkdir "$NEO4J_LOG"
       if [ $UID == 0 ] ; then
-        chown $NEO4J_USER "$NEO4J_HOME"/data/log
+        chown $NEO4J_USER "$NEO4J_LOG"
       fi
     fi
 }
@@ -371,13 +375,13 @@ complain_about_java_version() {
 # check if running Oracle JDK 7 or OpenJDK 7, warn if not
 checkjvmcompatibility() {
   # Shut down if java version < 1.7
-  JAVAVERSION=$("$JAVACMD" -version 2>&1 | awk -F '"' '/version/ {print $2}')
+  JAVAVERSION=$("$JAVACMD" -version 2>&1 | gawk -F '"' '/version/ {print $2}')
   if [[ "$JAVAVERSION" < "1.7" ]]; then
     complain_about_java_version
     exit 1
   fi
 
-  $JAVACMD -version 2>&1 | egrep -q "(Java HotSpot\\(TM\\)|OpenJDK) (64-Bit Server|Server|Client) VM"
+  $JAVACMD -version 2>&1 | gegrep -q "(Java HotSpot\\(TM\\)|OpenJDK) (64-Bit Server|Server|Client) VM"
   if [ $? -eq 1 ]
   then
     warn_about_java_runtime
@@ -385,6 +389,6 @@ checkjvmcompatibility() {
 }
 
 checkclasspath() {
-  echo $CLASSPATH | egrep -q 'neo4j-kernel-[0-9.]{2,8}-SNAPSHOT' && \
+  echo $CLASSPATH | gegrep -q 'neo4j-kernel-[0-9.]{2,8}-SNAPSHOT' && \
   echo -e "\nWARNING! Latest Development Build. Not intended for general-purpose use. May be unstable."
-}
\ No newline at end of file
+}
